<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>;&#xD;
// Автомат управления механизмом подъема&#xD;
// Команды: stop, expand, reduce&#xD;
// Состояния: error, expand_end, expanding, holding, reduce_end, reducing&#xD;
//&#xD;
//&#xD;
if liftmech.is_disabled = false then&#xD;
	case liftmech.state of&#xD;
		LIFT_STATE#holding:;&#xD;
			case sub_state of&#xD;
				0:;&#xD;
					Y19:=False; // регулятор расхода со стороны гидростанции&#xD;
					Y20:=False; // регулятор расхода на слив&#xD;
					Y5:=False; // плечо распределителя на расжатие механизма подъема&#xD;
					Y4:=False; // плечо распределителя на сжатие механизма подъема&#xD;
					YPP2_Iref := 0; // параметр регулятора расхода на слив&#xD;
					sub_state := 1;&#xD;
				1:;&#xD;
			end_case;&#xD;
			if liftmech.cmd = LIFT_CMD#expand then ;&#xD;
				sub_state := 0;&#xD;
				liftmech.state := expanding;&#xD;
			end_if;&#xD;
			if liftmech.cmd = LIFT_CMD#reduce then ;&#xD;
				sub_state := 0;&#xD;
				liftmech.state := reducing;&#xD;
			end_if;&#xD;
			&#xD;
		LIFT_STATE#expanding:;&#xD;
&#xD;
			case sub_state of&#xD;
				0:;&#xD;
					Y19:=True;&#xD;
					Y20:=True;&#xD;
					YPP2_Iref := 32000;&#xD;
					sub_state := 1;&#xD;
					t:=0;&#xD;
				1:;&#xD;
					t := t +2;&#xD;
					if(t &gt;= 5000) then ;&#xD;
						sub_state:= 2;&#xD;
					end_if;&#xD;
				2:;&#xD;
					Y5:=True;&#xD;
					Y4:=False;&#xD;
					sub_state:=6;&#xD;
				&#xD;
				6:;&#xD;
					t:=0;&#xD;
					sub_state := 7;&#xD;
				7:;&#xD;
					t:=t+2;&#xD;
					if(t&gt;=20000) then ;&#xD;
						sub_state := 8;&#xD;
					end_if;&#xD;
					if (liftmech.min_dist &lt; 960) then ;&#xD;
						sub_state := 6;&#xD;
					end_if;&#xD;
				8:;&#xD;
					liftmech.state := expand_end;&#xD;
					sub_state:=0;&#xD;
			end_case;&#xD;
			&#xD;
			if (liftmech.min_dist &gt;= 960) then ;&#xD;
				if(sub_state &lt; 6 and sub_state &gt; 0) then;&#xD;
					sub_state := 6;&#xD;
				end_if;&#xD;
			end_if;&#xD;
			if liftmech.cmd = LIFT_CMD#stop then ;&#xD;
				sub_state := 0;&#xD;
				liftmech.state := holding;&#xD;
			end_if;&#xD;
			if (liftmech.max_dist - liftmech.min_dist &gt;= deff_limit) then ;&#xD;
				sub_state := 0;&#xD;
				liftmech.state := error;&#xD;
			end_if;&#xD;
			&#xD;
		LIFT_STATE#reducing:;&#xD;
			case sub_state of&#xD;
				0:;&#xD;
					Y19:=True;&#xD;
					Y20:=True;&#xD;
					Y5:=False;&#xD;
					Y4:=True;	&#xD;
					YPP2_Iref := 0;&#xD;
					t:=0;&#xD;
					sub_state := 1;&#xD;
				1:;&#xD;
					t:=t+2;&#xD;
					if(t&gt;=5000) then ;&#xD;
						YPP2_Iref := 8000;&#xD;
						sub_state := 2;&#xD;
						t:=0;&#xD;
					end_if;&#xD;
				2:;&#xD;
					t:=t+2;&#xD;
					if(t&gt;=20000) then ;&#xD;
						YPP2_Iref := 10000;&#xD;
						sub_state := 3;&#xD;
						t:=0;&#xD;
					end_if;&#xD;
				3:;&#xD;
					t:=t+2;&#xD;
					if(t&gt;=20000) then ;&#xD;
						sub_state := 4;&#xD;
						t:=0;&#xD;
					end_if;&#xD;
				4:;&#xD;
					t:=t+2;&#xD;
					if(t&gt;=20000) then ;&#xD;
						YPP2_Iref := 15000;&#xD;
						sub_state := 5;&#xD;
					end_if;&#xD;
				5:;	&#xD;
				6:;&#xD;
					t:=0;&#xD;
					sub_state := 7;&#xD;
				7:;&#xD;
					t:=t+2;&#xD;
					if(t&gt;=20000) then ;&#xD;
						sub_state := 8;&#xD;
					end_if;&#xD;
					if (liftmech.max_dist &gt; 760) then ;&#xD;
						sub_state := 6;&#xD;
					end_if;&#xD;
				8:;&#xD;
					liftmech.state := reduce_end;&#xD;
					sub_state:=0;&#xD;
			end_case;&#xD;
			&#xD;
			if (liftmech.max_dist &lt;= 760) then ;&#xD;
				if(sub_state &lt; 6 and sub_state &gt; 0) then;&#xD;
					sub_state := 6;&#xD;
				end_if;&#xD;
			end_if;&#xD;
			if liftmech.cmd = LIFT_CMD#stop then ;&#xD;
				sub_state := 0;&#xD;
				liftmech.state := holding;&#xD;
			end_if;&#xD;
			if (liftmech.max_dist - liftmech.min_dist &gt;= deff_limit) then ;&#xD;
				sub_state := 0;&#xD;
				liftmech.state := error;&#xD;
			end_if;&#xD;
&#xD;
		LIFT_STATE#expand_end:;&#xD;
			case sub_state of&#xD;
				0:;&#xD;
					Y19:=False;&#xD;
					Y20:=False;&#xD;
					Y5:=False;&#xD;
					Y4:=False;&#xD;
					YPP2_Iref := 0;&#xD;
					sub_state := 1;&#xD;
				1:;&#xD;
			end_case;&#xD;
			if liftmech.cmd = LIFT_CMD#reduce then ;&#xD;
				sub_state := 0;&#xD;
				liftmech.state := reducing;&#xD;
			end_if;&#xD;
			&#xD;
		LIFT_STATE#reduce_end:;&#xD;
			case sub_state of&#xD;
				0:;&#xD;
					Y19:=False;&#xD;
					Y20:=False;&#xD;
					Y5:=False;&#xD;
					Y4:=False;&#xD;
					YPP2_Iref := 0;&#xD;
					sub_state := 1;&#xD;
				1:;&#xD;
			end_case;&#xD;
			if liftmech.cmd = LIFT_CMD#expand then ;&#xD;
				sub_state := 0;&#xD;
				liftmech.state := expanding;&#xD;
			end_if;&#xD;
&#xD;
			&#xD;
		LIFT_STATE#error:;&#xD;
			case sub_state of&#xD;
				0:;&#xD;
					saved_min := liftmech.min_dist;&#xD;
					saved_max := liftmech.max_dist;&#xD;
					liftmech.cmd:=stop;&#xD;
					Y19:=False;&#xD;
					Y20:=False;&#xD;
					Y5:=False;&#xD;
					Y4:=False;&#xD;
					YPP2_Iref := 0;&#xD;
					sub_state := 1;&#xD;
				1:;&#xD;
			end_case;&#xD;
	end_case;&#xD;
end_if;&#xD;
&#xD;
maxbb := max (BB1, BB2);&#xD;
maxbb := max (maxbb, BB3);&#xD;
maxbb := max (maxbb, BB4);&#xD;
maxbb := max (maxbb, BB5);&#xD;
maxbb := max (maxbb, BB6);&#xD;
maxbb := max (maxbb, BB7);&#xD;
maxbb := max (maxbb, BB8);&#xD;
liftmech.max_dist := maxbb;&#xD;
&#xD;
minbb := min (BB1, BB2);&#xD;
minbb := min (minbb, BB3);&#xD;
minbb := min (minbb, BB4);&#xD;
minbb := min (minbb, BB5);&#xD;
minbb := min (minbb, BB6);&#xD;
minbb := min (minbb, BB7);&#xD;
minbb := min (minbb, BB8);&#xD;
liftmech.min_dist := minbb;</Text></StructuredTextModel>