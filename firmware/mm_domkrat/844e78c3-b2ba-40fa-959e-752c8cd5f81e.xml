<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>;&#xD;
// Некоторая глобальная логика домкрата.&#xD;
// Ранее было задумано тут опиывать всю логику поведения домкрата,&#xD;
// но позднее она была описана на стороне компьютера. &#xD;
// здесь остались только запуск насосов и автоматизация шагания на &#xD;
// заданное число ступеней на случай работ без компьютера с сервисом.&#xD;
&#xD;
CASE main_state OF&#xD;
	0 : // запуск двигателей, ожидание их разгона до оборотов.&#xD;
		continue_handle:=False;&#xD;
		if start_handle = True then&#xD;
			Y1:=True;&#xD;
			Y2:=True;&#xD;
			&#xD;
			FC1_freq := 5000;&#xD;
			FC1_command := 1;&#xD;
			FC2_freq := 5000;&#xD;
			FC2_command := 1;&#xD;
			&#xD;
			if (FC1_out_freq &gt;= 4500 and FC2_out_freq &gt;= 4500)  then&#xD;
				main_state:=99;&#xD;
				start_handle:=False;&#xD;
			end_if;&#xD;
		end_if;&#xD;
		&#xD;
	1:; &#xD;
	2:;&#xD;
&#xD;
	3:;&#xD;
		main_state:=4;&#xD;
	4:;&#xD;
		main_state:=5;&#xD;
		&#xD;
		// Ниже описаны два цикла для автоматического подъема &#xD;
		// на заданное количество ступеней, и для спуска.&#xD;
	5:;&#xD;
		if (steps&gt;0) then ;&#xD;
			main_state:=51;&#xD;
		else&#xD;
			main_state:=99;&#xD;
		end_if;&#xD;
	51:;&#xD;
		if (up_frame_cycle_state = 0) then&#xD;
			start_up_frame_cycle_handle:= true;&#xD;
			main_state:=52;&#xD;
		end_if;&#xD;
	52:;&#xD;
		if (up_frame_cycle_state = 99) then&#xD;
			steps:=steps-1;&#xD;
			up_frame_cycle_state:=0;&#xD;
			main_state:=5;&#xD;
		end_if;&#xD;
&#xD;
	6:;&#xD;
		if (steps&gt;0) then ;&#xD;
			main_state:=61;&#xD;
		else&#xD;
			main_state:=99;&#xD;
		end_if;&#xD;
	61:;&#xD;
		if (down_frame_cycle_state = 0) then&#xD;
			start_down_frame_cycle_handle:= true;&#xD;
			main_state:=62;&#xD;
		end_if;&#xD;
	62:;&#xD;
		if (down_frame_cycle_state = 99) then&#xD;
			steps:=steps-1;&#xD;
			down_frame_cycle_state:=0;&#xD;
			main_state:=6;&#xD;
		end_if;&#xD;
	7:;&#xD;
		main_state:=8;&#xD;
	8:;&#xD;
		main_state:=9;&#xD;
	9:;&#xD;
		main_state:=10;&#xD;
	10:;&#xD;
		main_state:=11;&#xD;
	11:;&#xD;
		main_state:=12;&#xD;
	12:;&#xD;
		main_state:=13;&#xD;
		&#xD;
		&#xD;
	&#xD;
	99 :; // Processing after normal end&#xD;
&#xD;
	98 :; // Processing after error end.&#xD;
		&#xD;
END_CASE;&#xD;
&#xD;
if (stop_hanlde = True) then;&#xD;
	main_state:= 98;&#xD;
end_if;&#xD;
&#xD;
&#xD;
HPV1_EN := Y19;&#xD;
HPV2_EN:= Y20;&#xD;
HPV3_EN := Y21;&#xD;
HPV4_EN:= Y22;&#xD;
&#xD;
</Text></StructuredTextModel>