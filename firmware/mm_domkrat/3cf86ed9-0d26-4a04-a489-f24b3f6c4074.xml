<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>;&#xD;
;&#xD;
&#xD;
case FC_reset_stage of&#xD;
	0:&#xD;
		if FC2_reset_error = true then&#xD;
			FC_reset_stage := 1;							//запуск пследовательности перезагрузки частотника&#xD;
		end_if;&#xD;
		TON_instance(In:=true, PT:=T#5m);&#xD;
		if TON_instance.Q = true then 	// каждые 5 минут обнуляем счетчик перезапусков&#xD;
			TON_instance(In:=false);&#xD;
			reset_cnt := 0;&#xD;
		else&#xD;
			if reset_cnt &gt;= 3 then				// если счетчик перезапусков достиг 3, то блокируем запуск перезапуска&#xD;
				FC2_reset_error := false;&#xD;
				FC_reset_stage := 0;							//запуск пследовательности перезагрузки частотника&#xD;
			end_if;&#xD;
		end_if;			&#xD;
&#xD;
	1:&#xD;
		FC2_command:=16#0; 				//отключение команды на вращение частотнику&#xD;
		K2 := false;									//выключение частотника&#xD;
		TON_instance(In:=false);				//сброс таймера&#xD;
		FC_reset_stage := 2;&#xD;
	2:&#xD;
		TON_instance(In:=true, PT:=T#10s);			//запуск таймера&#xD;
		if TON_instance.Q = true then	&#xD;
			FC_reset_stage := 3;									//время выключения частотника прошло&#xD;
			TON_instance(In:=false);&#xD;
		end_if;&#xD;
	3:&#xD;
		K2 := true;											//включаем частотник&#xD;
		FC_reset_stage := 4;&#xD;
		TON_instance(In:=false);&#xD;
	4:&#xD;
		TON_instance(In:=true, PT:=T#5s);		//задаем время загрузки частотника&#xD;
		if TON_instance.Q = true then				//ожидаем включение частотника&#xD;
			FC_reset_stage := 5;&#xD;
			TON_instance(In:=false);&#xD;
		end_if;		&#xD;
	5:&#xD;
		FC_reset_stage := 0;&#xD;
		FC2_reset_error := false;&#xD;
		reset_cnt := reset_cnt + 1;&#xD;
		FC2_command:=16#0; 				//отключение команды на вращение частотнику (вдруг его включили)&#xD;
&#xD;
		&#xD;
end_case;&#xD;
&#xD;
&#xD;
</Text></StructuredTextModel>